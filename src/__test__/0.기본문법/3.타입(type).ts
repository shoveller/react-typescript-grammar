export {}
/**
 * 타입(type)이란?
 * 타입스크립트에서 객체를 표현하기 위해 사용하는 약속입니다.
 * 타입을 사용하면 객체의 표현을 변수처럼 사용할 수 있습니다.
 */

/**
 * 
 * 타입은 중복해서 선언할 수 없습니다.
 */
type 타입은_중복선언_불가 = {}
type 타입은_중복선언_불가 = {}


/**
 * 타입의 기본적인 사용법
 * 타입의 이름은 영문 대문자로 시작하는 것이 관례입니다.
 */ 
type Address = {
    /**
    * 타입 속에서 데이터를 표현한 것 하나하나를 필드라고 부릅니다.
    * 필드의 구분자로 콤마를 사용합니다.
    */ 
    address1: string,
    /**
    * 필드의 구분자로 콜론을 사용할 수도 있습니다.
    * 콜론과 콤마 중에서 어느것을 사용해도 괜찮습니다.
    * 줄을 구분했다면 생략해도 됩니다.
    * 보통은 eslint와 prettier 조합으로 한 방식만 사용하도록 강제합니다.
    */
    address2: string;
}



/**
 * 문제) 
 * 타입은 객체를 표현할 수 있습니다.
 * 변수에 유저 타입의 객체를 할당해 보세요.
 */
type 유저 = {
    id: string,
    성: string,
    명: string,
}

const 나;



/**
 * 타입은 extends 키워드로 상속을 할 수 없습니다.
 * 그 대신 & 연산자로 연결하면 병합을 할 수 있습니다.
 * 이것을 인터섹션(교집합)이라고 합니다.
 */
type 사람 = {
    키: number
}

type 유저1 = {
    id: string,
    성: string,
    명: string,
}

/**
 * 문제)
 * 아래의 변수를 초기화 해 보세요.
 */
const test2: 사람 & 유저;